<?xml version = "1.0" encoding = "UTF-8"?>
<!--Generated by XML Authority. Conforms to w3c http://www.w3.org/2001/XMLSchema-->
<xsd:schema xmlns:xsd = "http://www.w3.org/2001/XMLSchema">
  <!-- Schema generated for ASN.1 module "Z39-50-APDU-1995" -->
  
  
  <!-- Generated by com.wedgetail.asn1.compiler.backends.XMLSchemaEmitter 
     by Goeff Elgey and then modified by Eliot Christian
  Goeff's Warning: this is an example XML Schema for Z39.50 ASN.1 specification, for
  study and discussion only. It has been generated automatically according to
  my own ASN.1 => XML Schema transalation rules. I'm still unsure about some
  of the rules!
  The schema has been checked by XML Authority to be free of errors. However, 
  there is no guarantee that:
    (a) the schema is a true translation of the Z39.50 ASN.1 specification; or
    (b) that the schema will successfully validate any Z39.50 XML documents.
  Use at own risk, caveat emptor, etc.
-->
  
  
  <!--  
   XML Schema for Z39.50/XER within SOAP v 1.1  
   Z39.50/XER messages fit within a SOAP Body element. Following is an  
   example of namespaces applied to an instance of such a message:  
   xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" 
   xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance" 
   xmlns:xsd="http://www.w3.org/1999/XMLSchema" 
   SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" 
   xmlns:ez="http://asf.gils.net/xer/ez.xsd"  
   Z39.50/XER implements the messages specified in Z39-50-APDU-1995,   
     assigned in OID.3.1, as {Z39-50 2 1}     
   Z39-50-1995 is identical in definition to ISO 23950. 
   The Z39-50 definition is maintained by the U.S. Library of Congress  
    at "http://lcweb.loc.gov/z3950/agency/asn1.html" 
    
   The proposed XER specification is available  
    at "http://asf.gils.net/xer/standard.html".  
    
   -->
  
  
  <!-- Definition of type identifier "PDU" -->
  
  <xsd:element name = "PDU" type = "PDU"/>
  <xsd:complexType name = "PDU">
    <xsd:choice>
      <xsd:element name = "initRequest" type = "InitializeRequest"/>
      <xsd:element name = "initResponse" type = "InitializeResponse"/>
      <xsd:element name = "searchRequest" type = "SearchRequest"/>
      <xsd:element name = "searchResponse" type = "SearchResponse"/>
      <xsd:element name = "presentRequest" type = "PresentRequest"/>
      <xsd:element name = "presentResponse" type = "PresentResponse"/>
      <xsd:element name = "deleteResultSetRequest" type = "DeleteResultSetRequest"/>
      <xsd:element name = "deleteResultSetResponse" type = "DeleteResultSetResponse"/>
      <xsd:element name = "accessControlRequest" type = "AccessControlRequest"/>
      <xsd:element name = "accessControlResponse" type = "AccessControlResponse"/>
      <xsd:element name = "resourceControlRequest" type = "ResourceControlRequest"/>
      <xsd:element name = "resourceControlResponse" type = "ResourceControlResponse"/>
      <xsd:element name = "triggerResourceControlRequest" type = "TriggerResourceControlRequest"/>
      <xsd:element name = "resourceReportRequest" type = "ResourceReportRequest"/>
      <xsd:element name = "resourceReportResponse" type = "ResourceReportResponse"/>
      <xsd:element name = "scanRequest" type = "ScanRequest"/>
      <xsd:element name = "scanResponse" type = "ScanResponse"/>
      <xsd:element name = "sortRequest" type = "SortRequest"/>
      <xsd:element name = "sortResponse" type = "SortResponse"/>
      <xsd:element name = "segmentRequest" type = "Segment"/>
      <xsd:element name = "extendedServicesRequest" type = "ExtendedServicesRequest"/>
      <xsd:element name = "extendedServicesResponse" type = "ExtendedServicesResponse"/>
      <xsd:element name = "close" type = "Close"/>
    </xsd:choice>
  </xsd:complexType>
  
  <!-- Definition of type identifier "InitializeRequest" -->
  
  <xsd:element name = "InitializeRequest" type = "InitializeRequest"/>
  <xsd:complexType name = "InitializeRequest">
    <xsd:sequence>
      <xsd:element name = "referenceId" type = "ReferenceId" minOccurs = "0"/>
      <xsd:element name = "protocolVersion" type = "ProtocolVersion"/>
      <xsd:element name = "options" type = "Options"/>
      <xsd:element name = "preferredMessageSize" type = "xsd:integer"/>
      <xsd:element name = "exceptionalRecordSize" type = "xsd:integer"/>
      <xsd:element name = "idAuthentication" minOccurs = "0"/>
      <xsd:element name = "implementationId" type = "InternationalString" minOccurs = "0"/>
      <xsd:element name = "implementationName" type = "InternationalString" minOccurs = "0"/>
      <xsd:element name = "implementationVersion" type = "InternationalString" minOccurs = "0"/>
      <xsd:element name = "userInformationField" type = "EXTERNAL" minOccurs = "0"/>
      <xsd:element name = "otherInfo" type = "OtherInformation" minOccurs = "0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "InitializeResponse" -->
  
  <xsd:element name = "InitializeResponse" type = "InitializeResponse"/>
  <xsd:complexType name = "InitializeResponse">
    <xsd:sequence>
      <xsd:element name = "referenceId" type = "ReferenceId" minOccurs = "0"/>
      <xsd:element name = "protocolVersion" type = "ProtocolVersion"/>
      <xsd:element name = "options" type = "Options"/>
      <xsd:element name = "preferredMessageSize" type = "xsd:integer"/>
      <xsd:element name = "exceptionalRecordSize" type = "xsd:integer"/>
      <xsd:element name = "result" type = "xsd:boolean"/>
      <xsd:element name = "implementationId" type = "InternationalString" minOccurs = "0"/>
      <xsd:element name = "implementationName" type = "InternationalString" minOccurs = "0"/>
      <xsd:element name = "implementationVersion" type = "InternationalString" minOccurs = "0"/>
      <xsd:element name = "userInformationField" type = "EXTERNAL" minOccurs = "0"/>
      <xsd:element name = "otherInfo" type = "OtherInformation" minOccurs = "0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "ProtocolVersion" -->
  
  <xsd:element name = "ProtocolVersion" type = "ProtocolVersion"/>
  <xsd:simpleType name = "ProtocolVersion">
    <xsd:list itemType = "Temp-0"/>
  </xsd:simpleType>
  <xsd:simpleType name = "Options">
    <xsd:list itemType = "Temp-1"/>
  </xsd:simpleType>
  <xsd:simpleType name = "KnownProximityUnit">
    <xsd:restriction base = "xsd:string">
      <xsd:enumeration value = "character"/>
      <xsd:enumeration value = "word"/>
      <xsd:enumeration value = "sentence"/>
      <xsd:enumeration value = "paragraph"/>
      <xsd:enumeration value = "section"/>
      <xsd:enumeration value = "chapter"/>
      <xsd:enumeration value = "document"/>
      <xsd:enumeration value = "element"/>
      <xsd:enumeration value = "subelement"/>
      <xsd:enumeration value = "elementType"/>
      <xsd:enumeration value = "byte"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name = "PresentStatus">
    <xsd:restriction base = "xsd:string">
      <xsd:enumeration value = "success"/>
      <xsd:enumeration value = "partial-1"/>
      <xsd:enumeration value = "partial-2"/>
      <xsd:enumeration value = "partial-3"/>
      <xsd:enumeration value = "partial-4"/>
      <xsd:enumeration value = "failure"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name = "DeleteSetStatus">
    <xsd:restriction base = "xsd:string">
      <xsd:enumeration value = "success"/>
      <xsd:enumeration value = "resultSetDidNotExist"/>
      <xsd:enumeration value = "previouslyDeletedByTarget"/>
      <xsd:enumeration value = "systemProblemAtTarget"/>
      <xsd:enumeration value = "accessNotAllowed"/>
      <xsd:enumeration value = "resourceControlAtOrigin"/>
      <xsd:enumeration value = "resourceControlAtTarget"/>
      <xsd:enumeration value = "bulkDeleteNotSupported"/>
      <xsd:enumeration value = "notAllRsltSetsDeletedOnBulkDlte"/>
      <xsd:enumeration value = "notAllRequestedResultSetsDeleted"/>
      <xsd:enumeration value = "resultSetInUse"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name = "ResourceReportId">
    <xsd:restriction base = "xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name = "CloseReason">
    <xsd:restriction base = "xsd:string">
      <xsd:enumeration value = "finished"/>
      <xsd:enumeration value = "shutdown"/>
      <xsd:enumeration value = "systemProblem"/>
      <xsd:enumeration value = "costLimit"/>
      <xsd:enumeration value = "resources"/>
      <xsd:enumeration value = "securityViolation"/>
      <xsd:enumeration value = "protocolError"/>
      <xsd:enumeration value = "lackOfActivity"/>
      <xsd:enumeration value = "peerAbort"/>
      <xsd:enumeration value = "unspecified"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name = "ReferenceId">
    <xsd:restriction base = "xsd:hexBinary"/>
  </xsd:simpleType>
  <xsd:simpleType name = "ResultSetId">
    <xsd:restriction base = "InternationalString"/>
  </xsd:simpleType>
  <xsd:simpleType name = "ElementSetName">
    <xsd:restriction base = "InternationalString"/>
  </xsd:simpleType>
  <xsd:simpleType name = "DatabaseName">
    <xsd:restriction base = "InternationalString"/>
  </xsd:simpleType>
  <xsd:simpleType name = "AttributeSetId">
    <xsd:restriction base = "xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name = "InternationalString">
    <xsd:restriction base = "GeneralString"/>
  </xsd:simpleType>
  <xsd:simpleType name = "Temp-0">
    <xsd:restriction base = "xsd:string">
      <xsd:enumeration value = "version-1"/>
      <xsd:enumeration value = "version-2"/>
      <xsd:enumeration value = "version-3"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name = "Temp-1">
    <xsd:restriction base = "xsd:string">
      <xsd:enumeration value = "search"/>
      <xsd:enumeration value = "present"/>
      <xsd:enumeration value = "delSet"/>
      <xsd:enumeration value = "resourceReport"/>
      <xsd:enumeration value = "triggerResourceCtrl"/>
      <xsd:enumeration value = "resourceCtrl"/>
      <xsd:enumeration value = "accessCtrl"/>
      <xsd:enumeration value = "scan"/>
      <xsd:enumeration value = "sort"/>
      <xsd:enumeration value = "extendedServices"/>
      <xsd:enumeration value = "level-1Segmentation"/>
      <xsd:enumeration value = "level-2Segmentation"/>
      <xsd:enumeration value = "concurrentOperations"/>
      <xsd:enumeration value = "namedResultSets"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name = "Temp-2">
    <xsd:restriction base = "xsd:string">
      <xsd:enumeration value = "delete"/>
      <xsd:enumeration value = "modifyContents"/>
      <xsd:enumeration value = "modifyPermissions"/>
      <xsd:enumeration value = "present"/>
      <xsd:enumeration value = "invoke"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name = "BOOLEAN">
    <xsd:restriction base = "xsd:boolean">
      <xsd:enumeration value = "true"/>
      <xsd:enumeration value = "false"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name = "OID">
    <xsd:restriction base = "xsd:string">
      <xsd:pattern value = "\d*{\.\d*}*"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name = "GraphicString">
    <xsd:restriction base = "xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name = "GeneralString">
    <xsd:restriction base = "xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name = "GeneralizedTime">
    <xsd:restriction base = "xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name = "ObjectDescriptor">
    <xsd:restriction base = "xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name = "VisibleString">
    <xsd:restriction base = "xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name = "ANY">
    <xsd:restriction base = "xsd:anyType"/>
  </xsd:simpleType>
  
  <!-- Definition of type identifier "Options" -->
  
  <xsd:element name = "Options" type = "Options"/>
  
  <!-- Definition of type identifier "SearchRequest" -->
  
  <xsd:element name = "SearchRequest" type = "SearchRequest"/>
  <xsd:complexType name = "SearchRequest">
    <xsd:sequence>
      <xsd:element name = "referenceId" type = "ReferenceId" minOccurs = "0"/>
      <xsd:element name = "smallSetUpperBound" type = "xsd:integer"/>
      <xsd:element name = "largeSetLowerBound" type = "xsd:integer"/>
      <xsd:element name = "mediumSetPresentNumber" type = "xsd:integer"/>
      <xsd:element name = "replaceIndicator" type = "xsd:boolean"/>
      <xsd:element name = "resultSetName" type = "InternationalString"/>
      <xsd:element name = "databaseNames" type = "DatabaseNames"/>
      <xsd:element name = "smallSetElementSetNames" type = "ElementSetNames" minOccurs = "0"/>
      <xsd:element name = "mediumSetElementSetNames" type = "ElementSetNames" minOccurs = "0"/>
      <xsd:element name = "preferredRecordSyntax" type = "xsd:string" minOccurs = "0"/>
      <xsd:element name = "query" type = "Query"/>
      <xsd:element name = "additionalSearchInfo" type = "OtherInformation" minOccurs = "0"/>
      <xsd:element name = "otherInfo" type = "OtherInformation" minOccurs = "0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "Query" -->
  
  <xsd:element name = "Query" type = "Query"/>
  <xsd:complexType name = "Query">
    <xsd:choice>
      <xsd:element name = "type-0"/>
      <xsd:element name = "type-1" type = "RPNQuery"/>
      <xsd:element name = "type-2" type = "xsd:hexBinary"/>
      <xsd:element name = "type-100" type = "xsd:hexBinary"/>
      <xsd:element name = "type-101" type = "RPNQuery"/>
      <xsd:element name = "type-102" type = "xsd:hexBinary"/>
    </xsd:choice>
  </xsd:complexType>
  
  <!-- Definition of type identifier "RPNQuery" -->
  
  <xsd:element name = "RPNQuery" type = "RPNQuery"/>
  <xsd:complexType name = "RPNQuery">
    <xsd:sequence>
      <xsd:element name = "attributeSet" type = "AttributeSetId"/>
      <xsd:element name = "rpn" type = "RPNStructure"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "RPNStructure" -->
  
  <xsd:element name = "RPNStructure" type = "RPNStructure"/>
  <xsd:complexType name = "RPNStructure">
    <xsd:choice>
      <xsd:element name = "op" type = "Operand"/>
      <xsd:element name = "rpnRpnOp">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name = "rpn1" type = "RPNStructure"/>
            <xsd:element name = "rpn2" type = "RPNStructure"/>
            <xsd:element name = "op" type = "Operator"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:choice>
  </xsd:complexType>
  
  <!-- Definition of type identifier "Operand" -->
  
  <xsd:element name = "Operand" type = "Operand"/>
  <xsd:complexType name = "Operand">
    <xsd:choice>
      <xsd:element name = "attrTerm" type = "AttributesPlusTerm"/>
      <xsd:element name = "resultSet" type = "ResultSetId"/>
      <xsd:element name = "resultAttr" type = "ResultSetPlusAttributes"/>
    </xsd:choice>
  </xsd:complexType>
  
  <!-- Definition of type identifier "AttributesPlusTerm" -->
  
  <xsd:element name = "AttributesPlusTerm" type = "AttributesPlusTerm"/>
  <xsd:complexType name = "AttributesPlusTerm">
    <xsd:sequence>
      <xsd:element name = "attributes" type = "AttributeList"/>
      <xsd:element name = "term" type = "Term"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "ResultSetPlusAttributes" -->
  
  <xsd:element name = "ResultSetPlusAttributes" type = "ResultSetPlusAttributes"/>
  <xsd:complexType name = "ResultSetPlusAttributes">
    <xsd:sequence>
      <xsd:element name = "resultSet" type = "ResultSetId"/>
      <xsd:element name = "attributes" type = "AttributeList"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "AttributeList" -->
  
  <xsd:element name = "AttributeList" type = "AttributeList"/>
  <xsd:complexType name = "AttributeList">
    <xsd:sequence minOccurs = "0" maxOccurs = "unbounded">
      <xsd:element name = "AttributeElement" type = "AttributeElement"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "Term" -->
  
  <xsd:element name = "Term" type = "Term"/>
  <xsd:complexType name = "Term">
    <xsd:choice>
      <xsd:element name = "general" type = "xsd:hexBinary"/>
      <xsd:element name = "numeric" type = "xsd:integer"/>
      <xsd:element name = "characterString" type = "InternationalString"/>
      <xsd:element name = "oid" type = "xsd:string"/>
      <xsd:element name = "dateTime" type = "GeneralizedTime"/>
      <xsd:element name = "external" type = "EXTERNAL"/>
      <xsd:element name = "integerAndUnit" type = "IntUnit"/>
      <xsd:element name = "null" type = "NULL"/>
    </xsd:choice>
  </xsd:complexType>
  
  <!-- Definition of type identifier "Operator" -->
  
  <xsd:element name = "Operator" type = "Operator"/>
  <xsd:complexType name = "Operator">
    <xsd:choice>
      <xsd:element name = "and" type = "NULL"/>
      <xsd:element name = "or" type = "NULL"/>
      <xsd:element name = "and-not" type = "NULL"/>
      <xsd:element name = "prox" type = "ProximityOperator"/>
    </xsd:choice>
  </xsd:complexType>
  
  <!-- Definition of type identifier "AttributeElement" -->
  
  <xsd:element name = "AttributeElement" type = "AttributeElement"/>
  <xsd:complexType name = "AttributeElement">
    <xsd:sequence>
      <xsd:element name = "attributeSet" type = "AttributeSetId" minOccurs = "0"/>
      <xsd:element name = "attributeType" type = "xsd:integer"/>
      <xsd:element name = "attributeValue">
        <xsd:complexType>
          <xsd:choice>
            <xsd:element name = "numeric" type = "xsd:integer"/>
            <xsd:element name = "complex">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element name = "list">
                    <xsd:complexType>
                      <xsd:sequence minOccurs = "0" maxOccurs = "unbounded">
                        <xsd:element name = "StringOrNumeric" type = "StringOrNumeric"/>
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                  <xsd:element name = "semanticAction" minOccurs = "0">
                    <xsd:simpleType>
                      <xsd:list itemType = "xsd:decimal"/>
                    </xsd:simpleType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:choice>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "ProximityOperator" -->
  
  <xsd:element name = "ProximityOperator" type = "ProximityOperator"/>
  <xsd:complexType name = "ProximityOperator">
    <xsd:sequence>
      <xsd:element name = "exclusion" type = "xsd:boolean" minOccurs = "0"/>
      <xsd:element name = "distance" type = "xsd:integer"/>
      <xsd:element name = "ordered" type = "xsd:boolean"/>
      <xsd:element name = "relationType">
        <xsd:simpleType>
          <xsd:restriction base = "xsd:string">
            <xsd:enumeration value = "lessThan"/>
            <xsd:enumeration value = "lessThanOrEqual"/>
            <xsd:enumeration value = "equal"/>
            <xsd:enumeration value = "greaterThanOrEqual"/>
            <xsd:enumeration value = "greaterThan"/>
            <xsd:enumeration value = "notEqual"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name = "proximityUnitCode">
        <xsd:complexType>
          <xsd:choice>
            <xsd:element name = "known" type = "KnownProximityUnit"/>
            <xsd:element name = "private" type = "xsd:integer"/>
          </xsd:choice>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "KnownProximityUnit" -->
  
  <xsd:element name = "KnownProximityUnit" type = "KnownProximityUnit"/>
  
  <!-- Definition of type identifier "SearchResponse" -->
  
  <xsd:element name = "SearchResponse" type = "SearchResponse"/>
  <xsd:complexType name = "SearchResponse">
    <xsd:sequence>
      <xsd:element name = "referenceId" type = "ReferenceId" minOccurs = "0"/>
      <xsd:element name = "resultCount" type = "xsd:integer"/>
      <xsd:element name = "numberOfRecordsReturned" type = "xsd:integer"/>
      <xsd:element name = "nextResultSetPosition" type = "xsd:integer"/>
      <xsd:element name = "searchStatus" type = "xsd:boolean"/>
      <xsd:element name = "resultSetStatus" minOccurs = "0">
        <xsd:simpleType>
          <xsd:restriction base = "xsd:string">
            <xsd:enumeration value = "subset"/>
            <xsd:enumeration value = "interim"/>
            <xsd:enumeration value = "none"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name = "presentStatus" type = "PresentStatus" minOccurs = "0"/>
      <xsd:element name = "records" type = "Records" minOccurs = "0"/>
      <xsd:element name = "additionalSearchInfo" type = "OtherInformation" minOccurs = "0"/>
      <xsd:element name = "otherInfo" type = "OtherInformation" minOccurs = "0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "PresentRequest" -->
  
  <xsd:element name = "PresentRequest" type = "PresentRequest"/>
  <xsd:complexType name = "PresentRequest">
    <xsd:sequence>
      <xsd:element name = "referenceId" type = "ReferenceId" minOccurs = "0"/>
      <xsd:element name = "resultSetId" type = "ResultSetId"/>
      <xsd:element name = "resultSetStartPoint" type = "xsd:integer"/>
      <xsd:element name = "numberOfRecordsRequested" type = "xsd:integer"/>
      <xsd:element name = "additionalRanges" minOccurs = "0">
        <xsd:complexType>
          <xsd:sequence minOccurs = "0" maxOccurs = "unbounded">
            <xsd:element name = "Range" type = "Range"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name = "recordComposition" minOccurs = "0">
        <xsd:complexType>
          <xsd:choice>
            <xsd:element name = "simple" type = "ElementSetNames"/>
            <xsd:element name = "complex" type = "CompSpec"/>
          </xsd:choice>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name = "preferredRecordSyntax" type = "xsd:string" minOccurs = "0"/>
      <xsd:element name = "maxSegmentCount" type = "xsd:integer" minOccurs = "0"/>
      <xsd:element name = "maxRecordSize" type = "xsd:integer" minOccurs = "0"/>
      <xsd:element name = "maxSegmentSize" type = "xsd:integer" minOccurs = "0"/>
      <xsd:element name = "otherInfo" type = "OtherInformation" minOccurs = "0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "Segment" -->
  
  <xsd:element name = "Segment" type = "Segment"/>
  <xsd:complexType name = "Segment">
    <xsd:sequence>
      <xsd:element name = "referenceId" type = "ReferenceId" minOccurs = "0"/>
      <xsd:element name = "numberOfRecordsReturned" type = "xsd:integer"/>
      <xsd:element name = "segmentRecords">
        <xsd:complexType>
          <xsd:sequence minOccurs = "0" maxOccurs = "unbounded">
            <xsd:element name = "NamePlusRecord" type = "NamePlusRecord"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name = "otherInfo" type = "OtherInformation" minOccurs = "0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "PresentResponse" -->
  
  <xsd:element name = "PresentResponse" type = "PresentResponse"/>
  <xsd:complexType name = "PresentResponse">
    <xsd:sequence>
      <xsd:element name = "referenceId" type = "ReferenceId" minOccurs = "0"/>
      <xsd:element name = "numberOfRecordsReturned" type = "xsd:integer"/>
      <xsd:element name = "nextResultSetPosition" type = "xsd:integer"/>
      <xsd:element name = "presentStatus" type = "PresentStatus"/>
      <xsd:element name = "records" type = "Records" minOccurs = "0"/>
      <xsd:element name = "otherInfo" type = "OtherInformation" minOccurs = "0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "Records" -->
  
  <xsd:element name = "Records" type = "Records"/>
  <xsd:complexType name = "Records">
    <xsd:choice>
      <xsd:element name = "responseRecords">
        <xsd:complexType>
          <xsd:sequence minOccurs = "0" maxOccurs = "unbounded">
            <xsd:element name = "NamePlusRecord" type = "NamePlusRecord"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name = "nonSurrogateDiagnostic" type = "DefaultDiagFormat"/>
      <xsd:element name = "multipleNonSurDiagnostics">
        <xsd:complexType>
          <xsd:sequence minOccurs = "0" maxOccurs = "unbounded">
            <xsd:element name = "DiagRec" type = "DiagRec"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:choice>
  </xsd:complexType>
  
  <!-- Definition of type identifier "NamePlusRecord" -->
  
  <xsd:element name = "NamePlusRecord" type = "NamePlusRecord"/>
  <xsd:complexType name = "NamePlusRecord">
    <xsd:sequence>
      <xsd:element name = "name" type = "DatabaseName" minOccurs = "0"/>
      <xsd:element name = "record">
        <xsd:complexType>
          <xsd:choice>
            <xsd:element name = "retrievalRecord" type = "EXTERNAL"/>
            <xsd:element name = "surrogateDiagnostic" type = "DiagRec"/>
            <xsd:element name = "startingFragment" type = "FragmentSyntax"/>
            <xsd:element name = "intermediateFragment" type = "FragmentSyntax"/>
            <xsd:element name = "finalFragment" type = "FragmentSyntax"/>
          </xsd:choice>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "FragmentSyntax" -->
  
  <xsd:element name = "FragmentSyntax" type = "FragmentSyntax"/>
  <xsd:complexType name = "FragmentSyntax">
    <xsd:choice>
      <xsd:element name = "externallyTagged" type = "EXTERNAL"/>
      <xsd:element name = "notExternallyTagged" type = "xsd:hexBinary"/>
    </xsd:choice>
  </xsd:complexType>
  
  <!-- Definition of type identifier "DiagRec" -->
  
  <xsd:element name = "DiagRec" type = "DiagRec"/>
  <xsd:complexType name = "DiagRec">
    <xsd:choice>
      <xsd:element name = "defaultFormat" type = "DefaultDiagFormat"/>
      <xsd:element name = "externallyDefined" type = "EXTERNAL"/>
    </xsd:choice>
  </xsd:complexType>
  
  <!-- Definition of type identifier "DefaultDiagFormat" -->
  
  <xsd:element name = "DefaultDiagFormat" type = "DefaultDiagFormat"/>
  <xsd:complexType name = "DefaultDiagFormat">
    <xsd:sequence>
      <xsd:element name = "diagnosticSetId" type = "xsd:string"/>
      <xsd:element name = "condition" type = "xsd:integer"/>
      <xsd:element name = "addinfo">
        <xsd:complexType>
          <xsd:choice>
            <xsd:element name = "v2Addinfo" type = "VisibleString"/>
            <xsd:element name = "v3Addinfo" type = "InternationalString"/>
          </xsd:choice>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "Range" -->
  
  <xsd:element name = "Range" type = "Range"/>
  <xsd:complexType name = "Range">
    <xsd:sequence>
      <xsd:element name = "startingPosition" type = "xsd:integer"/>
      <xsd:element name = "numberOfRecords" type = "xsd:integer"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "ElementSetNames" -->
  
  <xsd:element name = "ElementSetNames" type = "ElementSetNames"/>
  <xsd:complexType name = "ElementSetNames">
    <xsd:choice>
      <xsd:element name = "genericElementSetName" type = "InternationalString"/>
      <xsd:element name = "databaseSpecific">
        <xsd:complexType>
          <xsd:sequence minOccurs = "0" maxOccurs = "unbounded">
            <xsd:sequence>
              <xsd:element name = "dbName" type = "DatabaseName"/>
              <xsd:element name = "esn" type = "ElementSetName"/>
            </xsd:sequence>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:choice>
  </xsd:complexType>
  
  <!-- Definition of type identifier "PresentStatus" -->
  
  <xsd:element name = "PresentStatus" type = "PresentStatus"/>
  
  <!-- Definition of type identifier "CompSpec" -->
  
  <xsd:element name = "CompSpec" type = "CompSpec"/>
  <xsd:complexType name = "CompSpec">
    <xsd:sequence>
      <xsd:element name = "selectAlternativeSyntax" type = "xsd:boolean"/>
      <xsd:element name = "generic" type = "Specification" minOccurs = "0"/>
      <xsd:element name = "dbSpecific" minOccurs = "0">
        <xsd:complexType>
          <xsd:sequence minOccurs = "0" maxOccurs = "unbounded">
            <xsd:sequence>
              <xsd:element name = "db" type = "DatabaseName"/>
              <xsd:element name = "spec" type = "Specification"/>
            </xsd:sequence>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name = "recordSyntax" minOccurs = "0">
        <xsd:simpleType>
          <xsd:list itemType = "xsd:string"/>
        </xsd:simpleType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "Specification" -->
  
  <xsd:element name = "Specification" type = "Specification"/>
  <xsd:complexType name = "Specification">
    <xsd:sequence>
      <xsd:element name = "schema" type = "xsd:string" minOccurs = "0"/>
      <xsd:element name = "elementSpec" minOccurs = "0">
        <xsd:complexType>
          <xsd:choice>
            <xsd:element name = "elementSetName" type = "InternationalString"/>
            <xsd:element name = "externalEspec" type = "EXTERNAL"/>
          </xsd:choice>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "DeleteResultSetRequest" -->
  
  <xsd:element name = "DeleteResultSetRequest" type = "DeleteResultSetRequest"/>
  <xsd:complexType name = "DeleteResultSetRequest">
    <xsd:sequence>
      <xsd:element name = "referenceId" type = "ReferenceId" minOccurs = "0"/>
      <xsd:element name = "deleteFunction">
        <xsd:simpleType>
          <xsd:restriction base = "xsd:string">
            <xsd:enumeration value = "list"/>
            <xsd:enumeration value = "all"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name = "resultSetList" minOccurs = "0">
        <xsd:simpleType>
          <xsd:list itemType = "ResultSetId"/>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name = "otherInfo" type = "OtherInformation" minOccurs = "0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "DeleteResultSetResponse" -->
  
  <xsd:element name = "DeleteResultSetResponse" type = "DeleteResultSetResponse"/>
  <xsd:complexType name = "DeleteResultSetResponse">
    <xsd:sequence>
      <xsd:element name = "referenceId" type = "ReferenceId" minOccurs = "0"/>
      <xsd:element name = "deleteOperationStatus" type = "DeleteSetStatus"/>
      <xsd:element name = "deleteListStatuses" type = "ListStatuses" minOccurs = "0"/>
      <xsd:element name = "numberNotDeleted" type = "xsd:integer" minOccurs = "0"/>
      <xsd:element name = "bulkStatuses" type = "ListStatuses" minOccurs = "0"/>
      <xsd:element name = "deleteMessage" type = "InternationalString" minOccurs = "0"/>
      <xsd:element name = "otherInfo" type = "OtherInformation" minOccurs = "0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "ListStatuses" -->
  
  <xsd:element name = "ListStatuses" type = "ListStatuses"/>
  <xsd:complexType name = "ListStatuses">
    <xsd:sequence minOccurs = "0" maxOccurs = "unbounded">
      <xsd:sequence>
        <xsd:element name = "id" type = "ResultSetId"/>
        <xsd:element name = "status" type = "DeleteSetStatus"/>
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "DeleteSetStatus" -->
  
  <xsd:element name = "DeleteSetStatus" type = "DeleteSetStatus"/>
  
  <!-- Definition of type identifier "AccessControlRequest" -->
  
  <xsd:element name = "AccessControlRequest" type = "AccessControlRequest"/>
  <xsd:complexType name = "AccessControlRequest">
    <xsd:sequence>
      <xsd:element name = "referenceId" type = "ReferenceId" minOccurs = "0"/>
      <xsd:element name = "securityChallenge">
        <xsd:complexType>
          <xsd:choice>
            <xsd:element name = "simpleForm" type = "xsd:hexBinary"/>
            <xsd:element name = "externallyDefined" type = "EXTERNAL"/>
          </xsd:choice>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name = "otherInfo" type = "OtherInformation" minOccurs = "0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "AccessControlResponse" -->
  
  <xsd:element name = "AccessControlResponse" type = "AccessControlResponse"/>
  <xsd:complexType name = "AccessControlResponse">
    <xsd:sequence>
      <xsd:element name = "referenceId" type = "ReferenceId" minOccurs = "0"/>
      <xsd:element name = "securityChallengeResponse" minOccurs = "0">
        <xsd:complexType>
          <xsd:choice>
            <xsd:element name = "simpleForm" type = "xsd:hexBinary"/>
            <xsd:element name = "externallyDefined" type = "EXTERNAL"/>
          </xsd:choice>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name = "diagnostic" type = "DiagRec" minOccurs = "0"/>
      <xsd:element name = "otherInfo" type = "OtherInformation" minOccurs = "0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "ResourceControlRequest" -->
  
  <xsd:element name = "ResourceControlRequest" type = "ResourceControlRequest"/>
  <xsd:complexType name = "ResourceControlRequest">
    <xsd:sequence>
      <xsd:element name = "referenceId" type = "ReferenceId" minOccurs = "0"/>
      <xsd:element name = "suspendedFlag" type = "xsd:boolean" minOccurs = "0"/>
      <xsd:element name = "resourceReport" type = "ResourceReport" minOccurs = "0"/>
      <xsd:element name = "partialResultsAvailable" minOccurs = "0">
        <xsd:simpleType>
          <xsd:restriction base = "xsd:string">
            <xsd:enumeration value = "subset"/>
            <xsd:enumeration value = "interim"/>
            <xsd:enumeration value = "none"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name = "responseRequired" type = "xsd:boolean"/>
      <xsd:element name = "triggeredRequestFlag" type = "xsd:boolean" minOccurs = "0"/>
      <xsd:element name = "otherInfo" type = "OtherInformation" minOccurs = "0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "ResourceControlResponse" -->
  
  <xsd:element name = "ResourceControlResponse" type = "ResourceControlResponse"/>
  <xsd:complexType name = "ResourceControlResponse">
    <xsd:sequence>
      <xsd:element name = "referenceId" type = "ReferenceId" minOccurs = "0"/>
      <xsd:element name = "continueFlag" type = "xsd:boolean"/>
      <xsd:element name = "resultSetWanted" type = "xsd:boolean" minOccurs = "0"/>
      <xsd:element name = "otherInfo" type = "OtherInformation" minOccurs = "0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "TriggerResourceControlRequest" -->
  
  <xsd:element name = "TriggerResourceControlRequest" type = "TriggerResourceControlRequest"/>
  <xsd:complexType name = "TriggerResourceControlRequest">
    <xsd:sequence>
      <xsd:element name = "referenceId" type = "ReferenceId" minOccurs = "0"/>
      <xsd:element name = "requestedAction">
        <xsd:simpleType>
          <xsd:restriction base = "xsd:string">
            <xsd:enumeration value = "resourceReport"/>
            <xsd:enumeration value = "resourceControl"/>
            <xsd:enumeration value = "cancel"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name = "prefResourceReportFormat" type = "ResourceReportId" minOccurs = "0"/>
      <xsd:element name = "resultSetWanted" type = "xsd:boolean" minOccurs = "0"/>
      <xsd:element name = "otherInfo" type = "OtherInformation" minOccurs = "0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "ResourceReportRequest" -->
  
  <xsd:element name = "ResourceReportRequest" type = "ResourceReportRequest"/>
  <xsd:complexType name = "ResourceReportRequest">
    <xsd:sequence>
      <xsd:element name = "referenceId" type = "ReferenceId" minOccurs = "0"/>
      <xsd:element name = "opId" type = "ReferenceId" minOccurs = "0"/>
      <xsd:element name = "prefResourceReportFormat" type = "ResourceReportId" minOccurs = "0"/>
      <xsd:element name = "otherInfo" type = "OtherInformation" minOccurs = "0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "ResourceReportResponse" -->
  
  <xsd:element name = "ResourceReportResponse" type = "ResourceReportResponse"/>
  <xsd:complexType name = "ResourceReportResponse">
    <xsd:sequence>
      <xsd:element name = "referenceId" type = "ReferenceId" minOccurs = "0"/>
      <xsd:element name = "resourceReportStatus">
        <xsd:simpleType>
          <xsd:restriction base = "xsd:string">
            <xsd:enumeration value = "success"/>
            <xsd:enumeration value = "partial"/>
            <xsd:enumeration value = "failure-1"/>
            <xsd:enumeration value = "failure-2"/>
            <xsd:enumeration value = "failure-3"/>
            <xsd:enumeration value = "failure-4"/>
            <xsd:enumeration value = "failure-5"/>
            <xsd:enumeration value = "failure-6"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name = "resourceReport" type = "ResourceReport" minOccurs = "0"/>
      <xsd:element name = "otherInfo" type = "OtherInformation" minOccurs = "0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "ResourceReport" -->
  
  <xsd:element name = "ResourceReport" type = "ResourceReport"/>
  <xsd:complexType name = "ResourceReport">
    <xsd:complexContent>
      <xsd:restriction base = "EXTERNAL"/>
    </xsd:complexContent>
  </xsd:complexType>
  
  <!-- Definition of type identifier "ResourceReportId" -->
  
  <xsd:element name = "ResourceReportId" type = "ResourceReportId"/>
  
  <!-- Definition of type identifier "ScanRequest" -->
  
  <xsd:element name = "ScanRequest" type = "ScanRequest"/>
  <xsd:complexType name = "ScanRequest">
    <xsd:sequence>
      <xsd:element name = "referenceId" type = "ReferenceId" minOccurs = "0"/>
      <xsd:element name = "databaseNames" type = "DatabaseNames"/>
      <xsd:element name = "attributeSet" type = "AttributeSetId" minOccurs = "0"/>
      <xsd:element name = "termListAndStartPoint" type = "AttributesPlusTerm"/>
      <xsd:element name = "stepSize" type = "xsd:integer" minOccurs = "0"/>
      <xsd:element name = "numberOfTermsRequested" type = "xsd:integer"/>
      <xsd:element name = "preferredPositionInResponse" type = "xsd:integer" minOccurs = "0"/>
      <xsd:element name = "otherInfo" type = "OtherInformation" minOccurs = "0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "ScanResponse" -->
  
  <xsd:element name = "ScanResponse" type = "ScanResponse"/>
  <xsd:complexType name = "ScanResponse">
    <!-- EJC changed ambiguous name "entries" to name "ListEntries" -->
    <xsd:sequence>
      <xsd:element name = "referenceId" type = "ReferenceId" minOccurs = "0"/>
      <xsd:element name = "stepSize" type = "xsd:integer" minOccurs = "0"/>
      <xsd:element name = "scanStatus">
        <xsd:simpleType>
          <xsd:restriction base = "xsd:string">
            <xsd:enumeration value = "success"/>
            <xsd:enumeration value = "partial-1"/>
            <xsd:enumeration value = "partial-2"/>
            <xsd:enumeration value = "partial-3"/>
            <xsd:enumeration value = "partial-4"/>
            <xsd:enumeration value = "partial-5"/>
            <xsd:enumeration value = "failure"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name = "numberOfEntriesReturned" type = "xsd:integer"/>
      <xsd:element name = "positionOfTerm" type = "xsd:integer" minOccurs = "0"/>
      <xsd:element name = "ListEntries" type = "ListEntries" minOccurs = "0"/>
      <xsd:element name = "attributeSet" type = "AttributeSetId" minOccurs = "0"/>
      <xsd:element name = "otherInfo" type = "OtherInformation" minOccurs = "0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "ListEntries" -->
  
  <xsd:complexType name = "ListEntries">
    <xsd:sequence>
      <xsd:element name = "entries" minOccurs = "0">
        <xsd:complexType>
          <xsd:sequence minOccurs = "0" maxOccurs = "unbounded">
            <xsd:element name = "Entry" type = "Entry"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name = "nonsurrogateDiagnostics" minOccurs = "0">
        <xsd:complexType>
          <xsd:sequence minOccurs = "0" maxOccurs = "unbounded">
            <xsd:element name = "DiagRec" type = "DiagRec"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "Entry" -->
  
  <xsd:element name = "Entry" type = "Entry"/>
  <xsd:complexType name = "Entry">
    <xsd:choice>
      <xsd:element name = "termInfo" type = "TermInfo"/>
      <xsd:element name = "surrogateDiagnostic" type = "DiagRec"/>
    </xsd:choice>
  </xsd:complexType>
  
  <!-- Definition of type identifier "TermInfo" -->
  
  <xsd:element name = "TermInfo" type = "TermInfo"/>
  <xsd:complexType name = "TermInfo">
    <xsd:sequence>
      <xsd:element name = "term" type = "Term"/>
      <xsd:element name = "displayTerm" type = "InternationalString" minOccurs = "0"/>
      <xsd:element name = "suggestedAttributes" type = "AttributeList" minOccurs = "0"/>
      <xsd:element name = "alternativeTerm" minOccurs = "0">
        <xsd:complexType>
          <xsd:sequence minOccurs = "0" maxOccurs = "unbounded">
            <xsd:element name = "AttributesPlusTerm" type = "AttributesPlusTerm"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name = "globalOccurrences" type = "xsd:integer" minOccurs = "0"/>
      <xsd:element name = "byAttributes" type = "OccurrenceByAttributes" minOccurs = "0"/>
      <xsd:element name = "otherTermInfo" type = "OtherInformation" minOccurs = "0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "OccurrenceByAttributes" -->
  
  <xsd:element name = "OccurrenceByAttributes" type = "OccurrenceByAttributes"/>
  <xsd:complexType name = "OccurrenceByAttributes">
    <xsd:sequence minOccurs = "0" maxOccurs = "unbounded">
      <xsd:sequence>
        <xsd:element name = "attributes" type = "AttributeList"/>
        <xsd:element name = "occurrences" minOccurs = "0">
          <xsd:complexType>
            <xsd:choice>
              <xsd:element name = "global" type = "xsd:integer"/>
              <xsd:element name = "byDatabase">
                <xsd:complexType>
                  <xsd:sequence minOccurs = "0" maxOccurs = "unbounded">
                    <xsd:sequence>
                      <xsd:element name = "db" type = "DatabaseName"/>
                      <xsd:element name = "num" type = "xsd:integer" minOccurs = "0"/>
                      <xsd:element name = "otherDbInfo" type = "OtherInformation" minOccurs = "0"/>
                    </xsd:sequence>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:choice>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name = "otherOccurInfo" type = "OtherInformation" minOccurs = "0"/>
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "SortRequest" -->
  
  <xsd:element name = "SortRequest" type = "SortRequest"/>
  <xsd:complexType name = "SortRequest">
    <xsd:sequence>
      <xsd:element name = "referenceId" type = "ReferenceId" minOccurs = "0"/>
      <xsd:element name = "inputResultSetNames">
        <xsd:simpleType>
          <xsd:list itemType = "InternationalString"/>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name = "sortedResultSetName" type = "InternationalString"/>
      <xsd:element name = "sortSequence">
        <xsd:complexType>
          <xsd:sequence minOccurs = "0" maxOccurs = "unbounded">
            <xsd:element name = "SortKeySpec" type = "SortKeySpec"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name = "otherInfo" type = "OtherInformation" minOccurs = "0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "SortResponse" -->
  
  <xsd:element name = "SortResponse" type = "SortResponse"/>
  <xsd:complexType name = "SortResponse">
    <xsd:sequence>
      <xsd:element name = "referenceId" type = "ReferenceId" minOccurs = "0"/>
      <xsd:element name = "sortStatus">
        <xsd:simpleType>
          <xsd:restriction base = "xsd:string">
            <xsd:enumeration value = "success"/>
            <xsd:enumeration value = "partial-1"/>
            <xsd:enumeration value = "failure"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name = "resultSetStatus" minOccurs = "0">
        <xsd:simpleType>
          <xsd:restriction base = "xsd:string">
            <xsd:enumeration value = "empty"/>
            <xsd:enumeration value = "interim"/>
            <xsd:enumeration value = "unchanged"/>
            <xsd:enumeration value = "none"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name = "diagnostics" minOccurs = "0">
        <xsd:complexType>
          <xsd:sequence minOccurs = "0" maxOccurs = "unbounded">
            <xsd:element name = "DiagRec" type = "DiagRec"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name = "otherInfo" type = "OtherInformation" minOccurs = "0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "SortKeySpec" -->
  
  <xsd:element name = "SortKeySpec" type = "SortKeySpec"/>
  <xsd:complexType name = "SortKeySpec">
    <xsd:sequence>
      <xsd:element name = "sortElement" type = "SortElement"/>
      <xsd:element name = "sortRelation">
        <xsd:simpleType>
          <xsd:restriction base = "xsd:string">
            <xsd:enumeration value = "ascending"/>
            <xsd:enumeration value = "descending"/>
            <xsd:enumeration value = "ascendingByFrequency"/>
            <xsd:enumeration value = "descendingByfrequency"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name = "caseSensitivity">
        <xsd:simpleType>
          <xsd:restriction base = "xsd:string">
            <xsd:enumeration value = "caseSensitive"/>
            <xsd:enumeration value = "caseInsensitive"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name = "missingValueAction" minOccurs = "0">
        <xsd:complexType>
          <xsd:choice>
            <xsd:element name = "abort" type = "NULL"/>
            <xsd:element name = "null" type = "NULL"/>
            <xsd:element name = "missingValueData" type = "xsd:hexBinary"/>
          </xsd:choice>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "SortElement" -->
  
  <xsd:element name = "SortElement" type = "SortElement"/>
  <xsd:complexType name = "SortElement">
    <xsd:choice>
      <xsd:element name = "generic" type = "SortKey"/>
      <xsd:element name = "datbaseSpecific">
        <xsd:complexType>
          <xsd:sequence minOccurs = "0" maxOccurs = "unbounded">
            <xsd:sequence>
              <xsd:element name = "databaseName" type = "DatabaseName"/>
              <xsd:element name = "dbSort" type = "SortKey"/>
            </xsd:sequence>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:choice>
  </xsd:complexType>
  
  <!-- Definition of type identifier "SortKey" -->
  
  <xsd:element name = "SortKey" type = "SortKey"/>
  <xsd:complexType name = "SortKey">
    <xsd:choice>
      <xsd:element name = "sortfield" type = "InternationalString"/>
      <xsd:element name = "elementSpec" type = "Specification"/>
      <xsd:element name = "sortAttributes">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name = "id" type = "AttributeSetId"/>
            <xsd:element name = "list" type = "AttributeList"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:choice>
  </xsd:complexType>
  
  <!-- Definition of type identifier "ExtendedServicesRequest" -->
  
  <xsd:element name = "ExtendedServicesRequest" type = "ExtendedServicesRequest"/>
  <xsd:complexType name = "ExtendedServicesRequest">
    <xsd:sequence>
      <xsd:element name = "referenceId" type = "ReferenceId" minOccurs = "0"/>
      <xsd:element name = "function">
        <xsd:simpleType>
          <xsd:restriction base = "xsd:string">
            <xsd:enumeration value = "create"/>
            <xsd:enumeration value = "delete"/>
            <xsd:enumeration value = "modify"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name = "packageType" type = "xsd:string"/>
      <xsd:element name = "packageName" type = "InternationalString" minOccurs = "0"/>
      <xsd:element name = "userId" type = "InternationalString" minOccurs = "0"/>
      <xsd:element name = "retentionTime" type = "IntUnit" minOccurs = "0"/>
      <xsd:element name = "permissions" type = "Permissions" minOccurs = "0"/>
      <xsd:element name = "description" type = "InternationalString" minOccurs = "0"/>
      <xsd:element name = "taskSpecificParameters" type = "EXTERNAL" minOccurs = "0"/>
      <xsd:element name = "waitAction">
        <xsd:simpleType>
          <xsd:restriction base = "xsd:string">
            <xsd:enumeration value = "wait"/>
            <xsd:enumeration value = "waitIfPossible"/>
            <xsd:enumeration value = "dontWait"/>
            <xsd:enumeration value = "dontReturnPackage"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name = "elements" type = "ElementSetName" minOccurs = "0"/>
      <xsd:element name = "otherInfo" type = "OtherInformation" minOccurs = "0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "ExtendedServicesResponse" -->
  
  <xsd:element name = "ExtendedServicesResponse" type = "ExtendedServicesResponse"/>
  <xsd:complexType name = "ExtendedServicesResponse">
    <xsd:sequence>
      <xsd:element name = "referenceId" type = "ReferenceId" minOccurs = "0"/>
      <xsd:element name = "operationStatus">
        <xsd:simpleType>
          <xsd:restriction base = "xsd:string">
            <xsd:enumeration value = "done"/>
            <xsd:enumeration value = "accepted"/>
            <xsd:enumeration value = "failure"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name = "diagnostics" minOccurs = "0">
        <xsd:complexType>
          <xsd:sequence minOccurs = "0" maxOccurs = "unbounded">
            <xsd:element name = "DiagRec" type = "DiagRec"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name = "taskPackage" type = "EXTERNAL" minOccurs = "0"/>
      <xsd:element name = "otherInfo" type = "OtherInformation" minOccurs = "0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "Permissions" -->
  
  <xsd:element name = "Permissions" type = "Permissions"/>
  <xsd:complexType name = "Permissions">
    <xsd:sequence minOccurs = "0" maxOccurs = "unbounded">
      <xsd:sequence>
        <xsd:element name = "userId" type = "InternationalString"/>
        <xsd:element name = "allowableFunctions">
          <xsd:simpleType>
            <xsd:list itemType = "Temp-2"/>
          </xsd:simpleType>
        </xsd:element>
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "Close" -->
  
  <xsd:element name = "Close" type = "Close"/>
  <xsd:complexType name = "Close">
    <xsd:sequence>
      <xsd:element name = "referenceId" type = "ReferenceId" minOccurs = "0"/>
      <xsd:element name = "closeReason" type = "CloseReason"/>
      <xsd:element name = "diagnosticInformation" type = "InternationalString" minOccurs = "0"/>
      <xsd:element name = "resourceReportFormat" type = "ResourceReportId" minOccurs = "0"/>
      <xsd:element name = "resourceReport" type = "ResourceReport" minOccurs = "0"/>
      <xsd:element name = "otherInfo" type = "OtherInformation" minOccurs = "0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "CloseReason" -->
  
  <xsd:element name = "CloseReason" type = "CloseReason"/>
  
  <!-- Definition of type identifier "ReferenceId" -->
  
  <xsd:element name = "ReferenceId" type = "ReferenceId"/>
  
  <!-- Definition of type identifier "ResultSetId" -->
  
  <xsd:element name = "ResultSetId" type = "ResultSetId"/>
  
  <!-- Definition of type identifier "ElementSetName" -->
  
  <xsd:element name = "ElementSetName" type = "ElementSetName"/>
  
  <!-- Definition of type identifier "DatabaseName" -->
  
  <xsd:element name = "databaseName" type = "DatabaseName"/>
  
  <!-- Definition of type identifier "AttributeSetId" -->
  
  <xsd:element name = "AttributeSetId" type = "AttributeSetId"/>
  
  <!-- Definition of type identifier "OtherInformation" -->
  
  <xsd:element name = "OtherInformation" type = "OtherInformation"/>
  <xsd:complexType name = "OtherInformation">
    <xsd:sequence minOccurs = "0" maxOccurs = "unbounded">
      <xsd:sequence>
        <xsd:element name = "category" type = "InfoCategory" minOccurs = "0"/>
        <xsd:element name = "information">
          <xsd:complexType>
            <xsd:choice>
              <xsd:element name = "characterInfo" type = "InternationalString"/>
              <xsd:element name = "binaryInfo" type = "xsd:hexBinary"/>
              <xsd:element name = "externallyDefinedInfo" type = "EXTERNAL"/>
              <xsd:element name = "oid" type = "xsd:string"/>
            </xsd:choice>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "InfoCategory" -->
  
  <xsd:element name = "InfoCategory" type = "InfoCategory"/>
  <xsd:complexType name = "InfoCategory">
    <xsd:sequence>
      <xsd:element name = "categoryTypeId" type = "xsd:string" minOccurs = "0"/>
      <xsd:element name = "categoryValue" type = "xsd:integer"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "IntUnit" -->
  
  <xsd:element name = "IntUnit" type = "IntUnit"/>
  <xsd:complexType name = "IntUnit">
    <xsd:sequence>
      <xsd:element name = "value" type = "xsd:integer"/>
      <xsd:element name = "unitUsed" type = "Unit"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "Unit" -->
  
  <xsd:element name = "Unit" type = "Unit"/>
  <xsd:complexType name = "Unit">
    <xsd:sequence>
      <xsd:element name = "unitSystem" type = "InternationalString" minOccurs = "0"/>
      <xsd:element name = "unitType" type = "StringOrNumeric" minOccurs = "0"/>
      <xsd:element name = "unit" type = "StringOrNumeric" minOccurs = "0"/>
      <xsd:element name = "scaleFactor" type = "xsd:integer" minOccurs = "0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- Definition of type identifier "InternationalString" -->
  
  <xsd:element name = "InternationalString" type = "InternationalString"/>
  
  <!-- Definition of type identifier "StringOrNumeric" -->
  
  <xsd:element name = "StringOrNumeric" type = "StringOrNumeric"/>
  <xsd:complexType name = "StringOrNumeric">
    <xsd:choice>
      <xsd:element name = "string" type = "InternationalString"/>
      <xsd:element name = "numeric" type = "xsd:integer"/>
    </xsd:choice>
  </xsd:complexType>
  
  <!-- 
    Schema for selected ASN.1 types. Should be made available via 'import' 
    tag. Should also define an ASN.1 namespace, for example "asn1:BOOLEAN".
  -->
  
  
  <!-- XML Schema has a "boolean" type that allows values "true", "false", "0"
       and "1". The following definition restricts that type to just "true"
       and "false". May be necessary for canonicalization (?) -->
  
  <xsd:complexType name = "NULL"/>
  
  <!-- The ASN.1 type "ANY" is no longer a part of the ASN.1 standard, but
       I've kept it in because Z39.50 still supports it (aside: when is this
       specification going to be updated?) -->
  
  
  <!-- The type EXTERNAL should be set to allow any combination of elements. 
       I cannot get that to work (!), so I've defined what we see in the sample -->
  
  <xsd:complexType name = "EXTERNAL">
    <xsd:sequence>
      <xsd:element name = "External">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name = "direct-reference" type = "xsd:string"/>
            <xsd:element name = "encoding">
              <xsd:complexType>
                <xsd:choice>
                  <xsd:element ref = "single-ASN1-type"/>
                  <xsd:element ref = "octet-aligned"/>
                </xsd:choice>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name = "single-ASN1-type">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref = "motd" minOccurs = "0" maxOccurs = "unbounded"/>
        <xsd:element ref = "DBName" minOccurs = "0" maxOccurs = "unbounded"/>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name = "octet-aligned" type = "xsd:string"/>
  <xsd:element name = "motd" type = "xsd:string"/>
  <xsd:element name = "DBName" type = "xsd:string"/>
  <xsd:complexType name = "DatabaseNames">
    <xsd:sequence minOccurs = "0" maxOccurs = "unbounded">
      <xsd:element ref = "DatabaseName"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name = "databaseNames" type = "DatabaseNames"/>
  <xsd:element name = "DatabaseName" type = "xsd:string"/>
</xsd:schema>